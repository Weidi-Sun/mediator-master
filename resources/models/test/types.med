typedef int 0 .. 255 as ubyte;
typedef ubyte [] as ubytelist;

// typedef pkg.ubyte [] as ubytelist2;
// typedef pkg.ubyte [] as ubytelist2;Â®

typedef enum {Working, Idle} as Status;

function <e,d:int> inc (a:ubyte, b:ubyte) : ubyte {
    variables {
        c : ubyte;
    }
    statements {
        b = 1;
        return a + d;
    }
}

automaton <p1:int, p2:int> test (a, b:in int p1 .. p2) {
    variables {
        arr1: (int, int) [p1] init (1, 2);
        // TODO
        arr2: int [arr1];
        // TODO
        c: int init { a = 222222222, b = 3, c = 123, d = 123 };
    }
    clocks a,b;
    transitions {

        (c >= 0) -> {
            sync a;
            c = a.value;
        }

    }
    variables {
        arr3: int;
    }
    properties {
        H: A true && (true -> false);
        H2: A G a.value >= 1;
    }
} meta {
    default = 2,
    a = c
}

system <p3:int> a (a,b :in int p3 .. p3 + 10) {
    components {
        d: test<1,3>;
        e, c: test<1,3>;
    }
    connections {
        test<1,2>(d.a, e.b);
    }
}